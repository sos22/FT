##
## Debian-specific suppressions
##

{
   Debian libc6 (2.3.x) stripped dynamic linker
   Memcheck:Cond
   obj:/lib/ld-2.3.*.so
   obj:/lib/ld-2.3.*.so
   obj:/lib/ld-2.3.*.so
   obj:/lib/ld-2.3.*.so
   obj:/lib/ld-2.3.*.so
}

{
   Debian libc6 (2.4.x) stripped dynamic linker 
   Memcheck:Cond
   obj:/lib/ld-2.4.so
   obj:/lib/ld-2.4.so
   obj:/lib/ld-2.4.so
   obj:/lib/ld-2.4.so
   obj:/lib/ld-2.4.so
}

{
   Debian libc6 (2.5.x) stripped dynamic linker 
   Memcheck:Cond
   obj:/lib/ld-2.5.so
   obj:/lib/ld-2.5.so
   obj:/lib/ld-2.5.so
   obj:/lib/ld-2.5.so
   obj:/lib/ld-2.5.so
}

{
   strchr/libc-2.3.2.so/_dl_catch_error(Cond)
   Memcheck:Cond
   fun:strchr
   obj:*libc-2.3.2.so
   fun:_dl_catch_error
   obj:*libc-2.3.2.so
}

{
    "Xlib does not zero out unused bytes in the protocol stream"; see http://keithp.com/~keithp/talks/usenix2003/html/net.html
    Memcheck:Param
    writev(vector[...])
    fun:vgAllRoadsLeadToRome_writev
    fun:__writev
    obj:/usr/X11R6/lib/libX11.so.6.2
    fun:_X11TransWritev
}

{
   Debian_dlopen 
   Memcheck:Cond
   fun:_dl_relocate_object
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:__GI__dl_open
}

{
   Debian_dlopen2
   Memcheck:Addr1
   obj:/lib/ld-2.3.2.so
   fun:_dl_map_object
   fun:dl_open_worker
   fun:_dl_catch_error
}

{
   Debian_dlopen3
   Memcheck:Addr1
   obj:/lib/ld-2.3.2.so
   fun:_dl_map_object
   obj:/lib/ld-2.3.2.so
   fun:_dl_catch_error
}
{
   Debian_dlopen4
   Memcheck:Addr1
   obj:/lib/ld-2.3.2.so
   fun:_dl_check_map_versions
   fun:dl_open_worker
   fun:_dl_catch_error
}
{
   Debian_gcc_supp
   Memcheck:Addr4
   obj:/lib/libgcc_s.so.1
   fun:__dl_iterate_phdr
   fun:_Unwind_Find_FDE
   obj:/lib/libgcc_s.so.1
}

{
   Debian zlib1g suppression
   Memcheck:Cond
   obj:/usr/lib/libz.so.1.2.2
   obj:/usr/lib/libz.so.1.2.2
   fun:deflate
   fun:main
}

# Glib stores pointers in an integral type. Bug#231989
{
  glib type registry
  Memcheck:Leak
  fun:calloc
  fun:g_malloc0
  fun:type_node_any_new_W
}

{
   Debian rpmatch (malloc) static allocations
   Memcheck:Leak
   fun:malloc
   obj:/lib/tls/libc-2.3.6.so
   obj:/lib/tls/libc-2.3.6.so
   obj:/lib/tls/libc-2.3.6.so
   obj:/lib/tls/libc-2.3.6.so
   fun:regcomp
   fun:rpmatch
   fun:main
}
{
   Debian rpmatch (malloc) static allocations
   Memcheck:Leak
   fun:malloc
   obj:/lib/tls/libc-2.3.6.so
   obj:/lib/tls/libc-2.3.6.so
   obj:/lib/tls/libc-2.3.6.so
   fun:regcomp
   fun:rpmatch
   fun:main
}
{
   Debian rpmatch (malloc) static allocations
   Memcheck:Leak
   fun:malloc
   obj:/lib/tls/libc-2.3.6.so
   obj:/lib/tls/libc-2.3.6.so
   fun:regcomp
   fun:rpmatch
   fun:main
}
{
   Debian rpmatch (malloc) static allocations
   Memcheck:Leak
   fun:malloc
   obj:/lib/tls/libc-2.3.6.so
   fun:regcomp
   fun:rpmatch
   fun:main
}

{
   Debian rpmatch (calloc) static allocations
   Memcheck:Leak
   fun:calloc
   obj:/lib/tls/libc-2.3.6.so
   obj:/lib/tls/libc-2.3.6.so
   obj:/lib/tls/libc-2.3.6.so
   obj:/lib/tls/libc-2.3.6.so
   obj:/lib/tls/libc-2.3.6.so
   fun:regcomp
   fun:rpmatch
   fun:main
}
{
   Debian rpmatch (malloc) static allocations
   Memcheck:Leak
   fun:malloc
   obj:/lib/tls/libc-2.3.6.so
   fun:regcomp
   fun:rpmatch
   fun:main
}
{
   Debian rpmatch (malloc) static allocations
   Memcheck:Leak
   fun:malloc
   obj:/lib/tls/libc-2.3.6.so
   fun:regcomp
   fun:rpmatch
   fun:main
}
{
   Debian rpmatch (calloc) static allocations
   Memcheck:Leak
   fun:calloc
   obj:/lib/tls/libc-2.3.6.so
   fun:regcomp
   fun:rpmatch
   fun:main
}
{
   Debian rpmatch (calloc) static allocations
   Memcheck:Leak
   fun:calloc
   obj:/lib/tls/libc-2.3.6.so
   obj:/lib/tls/libc-2.3.6.so
   fun:regcomp
   fun:rpmatch
   fun:main
}
{
   Debian rpmatch (malloc - realloc) static allocations
   Memcheck:Leak
   fun:malloc
   fun:realloc
   obj:/lib/tls/libc-2.3.6.so
   fun:regcomp
   fun:rpmatch
   fun:main
}
{
   Debian rpmatch (malloc) static allocations
   Memcheck:Leak
   fun:malloc
   fun:regcomp
   fun:rpmatch
   fun:main
}

#
# This is a valgrind suppression file that should be used when using python
#
# You must edit Objects/obmalloc.c and uncomment Py_USING_MEMORY_DEBUGGER
# to use the preferred suppressions with Py_ADDRESS_IN_RANGE.
#
# If you do not want to recompile Python, you can uncomment
# suppressions for PyObject_Free and PyObject_Realloc.
#
# See Misc/README.valgrind in the python source for more information.

# all tool names: Addrcheck,Memcheck,cachegrind,helgrind,massif
{
   ADDRESS_IN_RANGE/Invalid read of size 4
   Memcheck:Addr4
   fun:Py_ADDRESS_IN_RANGE
}

{
   ADDRESS_IN_RANGE/Invalid read of size 4
   Memcheck:Value4
   fun:Py_ADDRESS_IN_RANGE
}

{
   ADDRESS_IN_RANGE/Conditional jump or move depends on uninitialised value
   Memcheck:Cond
   fun:Py_ADDRESS_IN_RANGE
}

###{
###   ADDRESS_IN_RANGE/Invalid read of size 4
###   Memcheck:Addr4
###   fun:PyObject_Free
###}
###
###{
###   ADDRESS_IN_RANGE/Invalid read of size 4
###   Memcheck:Value4
###   fun:PyObject_Free
###}
###
###{
###   ADDRESS_IN_RANGE/Conditional jump or move depends on uninitialised value
###   Memcheck:Cond
###   fun:PyObject_Free
###}

###{
###   ADDRESS_IN_RANGE/Invalid read of size 4
###   Memcheck:Addr4
###   fun:PyObject_Realloc
###}
###
###{
###   ADDRESS_IN_RANGE/Invalid read of size 4
###   Memcheck:Value4
###   fun:PyObject_Realloc
###}
###
###{
###   ADDRESS_IN_RANGE/Conditional jump or move depends on uninitialised value
###   Memcheck:Cond
###   fun:PyObject_Realloc
###}

###
### All the suppressions below are for errors that occur within libraries
### that Python uses.  The problems to not appear to be related to Python's
### use of the libraries.
###
{
   GDBM problems, see test_gdbm
   Memcheck:Param
   write(buf)
   fun:write
   fun:gdbm_open

}

###
### These occur from somewhere within the SSL, when running
###  test_socket_sll.  They are too general to leave on by default.
###
###{
###   somewhere in SSL stuff
###   Memcheck:Cond
###   fun:memset
###}
###{
###   somewhere in SSL stuff
###   Memcheck:Value4
###   fun:memset
###}
###
###{
###   somewhere in SSL stuff
###   Memcheck:Cond
###   fun:MD5_Update
###}
###
###{
###   somewhere in SSL stuff
###   Memcheck:Value4
###   fun:MD5_Update
###}

#
# All of these problems come from using test_socket_ssl
#
{
   from test_socket_ssl
   Memcheck:Cond
   fun:BN_bin2bn
}

{
   from test_socket_ssl
   Memcheck:Cond
   fun:BN_num_bits_word
}

{
   from test_socket_ssl
   Memcheck:Value4
   fun:BN_num_bits_word
}

{
   from test_socket_ssl
   Memcheck:Cond
   fun:BN_mod_exp_mont_word
}

{
   from test_socket_ssl
   Memcheck:Cond
   fun:BN_mod_exp_mont
}

{
   from test_socket_ssl
   Memcheck:Param
   write(buf)
   fun:write
   obj:/usr/lib/libcrypto.so.0.9.7
}

{
   from test_socket_ssl
   Memcheck:Cond
   fun:RSA_verify
}

{
   from test_socket_ssl
   Memcheck:Value4
   fun:RSA_verify
}

{
   from test_socket_ssl
   Memcheck:Value4
   fun:DES_set_key_unchecked
}

{
   from test_socket_ssl
   Memcheck:Value4
   fun:DES_encrypt2
}

{
   from test_socket_ssl
   Memcheck:Cond
   obj:/usr/lib/libssl.so.0.9.7
}

{
   from test_socket_ssl
   Memcheck:Value4
   obj:/usr/lib/libssl.so.0.9.7
}

{
   from test_socket_ssl
   Memcheck:Cond
   fun:BUF_MEM_grow_clean
}

{
   from test_socket_ssl
   Memcheck:Cond
   fun:memcpy
   fun:ssl3_read_bytes
}

{
   from test_socket_ssl
   Memcheck:Cond
   fun:SHA1_Update
}

{
   from test_socket_ssl
   Memcheck:Value4
   fun:SHA1_Update
}

{
   Debian libc6 (2.9.x) stripped dynamic linker
   Memcheck:Cond
   obj:/lib/ld-2.9.so
   obj:/lib/ld-2.9.so
   obj:/lib/ld-2.9.so
   obj:/lib/ld-2.9.so
   obj:/lib/ld-2.9.so

}

