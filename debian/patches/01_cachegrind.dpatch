#! /bin/sh -e
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Cope with arguments over 510 characters in length when writing the
## DP: cachegrind output file

[ -f debian/patches/00patch-opts ] && . debian/patches/00patch-opts
patch_opts="${patch_opts:--f --no-backup-if-mismatch}"

if [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
       -patch) patch $patch_opts -p1 < $0;;
       -unpatch) patch $patch_opts -p1 -R < $0;;
        *)
                echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
                exit 1;;
esac

exit 0
@DPATCH@

diff -urN valgrind-2.2.0.orig/cachegrind/cg_main.c valgrind-2.2.0/cachegrind/cg_main.c
--- valgrind-2.2.0.orig/cachegrind/cg_main.c	2004-08-29 21:02:26.000000000 +0000
+++ valgrind-2.2.0/cachegrind/cg_main.c	2004-10-13 18:44:58.000000000 +0000
@@ -1142,8 +1142,8 @@
    VG_(strcpy)(buf, "cmd:");
    VG_(write)(fd, (void*)buf, VG_(strlen)(buf));
    for (i = 0; i < VG_(client_argc); i++) {
-       VG_(sprintf)(buf, " %s", VG_(client_argv)[i]);
-       VG_(write)(fd, (void*)buf, VG_(strlen)(buf));
+       VG_(write)(fd, "", 1);
+       VG_(write)(fd, VG_(client_argv)[i], VG_(strlen)(VG_(client_argv)[i]));
    }
    // "events:" line
    VG_(sprintf)(buf, "\nevents: Ir I1mr I2mr Dr D1mr D2mr Dw D1mw D2mw\n");
